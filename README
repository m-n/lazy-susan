
A more flexible readtable.

The goal of lazy-susan's interface is to make the following easy
to use:

1. Package local package designators
2. Synonym symbols.
3. Redefinition of constituent traits
   (e.g. treat #\: as something other than a package seperator.)

LAZY-SUSAN achieves this by implementing its own token reader -- the part
of the reader algorithm that is used when there hasn't been a macro character
encountered. (To hijack CL's readtable machinery we have
to set our token reader as a macro character.)

Out of scope:

1. Unordered reading, e.g. foo.bar -> (bar foo)

Maybe in the future:

1. Enough flexibility to read cons as CL:CONS with downcasing reader
2. Provide our own readtable.

Limitations:

We haven't figured out how to handle EOF.

We have to set the macro character function of every character that can
start a token to the TOKEN-READER function to make a lazy-susan rt.
This can be heavyweight especially if we want to allow non-ascii tokens.
